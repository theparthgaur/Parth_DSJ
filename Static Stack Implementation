class Stack{
    static int max=4;
    int top;
    int stack[]=new int[max];

    stack(){
        top=-1;
    }

    boolean underflow(){
        return(top<0);
    }

    boolean push(int data){
        if (top>=(max-1)){
            System.out.println("Stack is overflow");
            return false;
        }
        else{
            top=top+1;
            stack[top]=data;
            System.out.println(data+" push operation done");
            return true;
        }
    }

    int pop(){
        if (top<0){
            System.out.println("Stack is underflow");
            return 0;
        }
        else{
            int temp=stack[top];
            top=top-1;
            return temp;
        }
    }

    int peek(){
        if (top<0){
            System.out.println("Stack is underflow");
            return 0;
        }
        else{
            int temp=stack[top];
            return temp;
        }
    }
}

public class Staticstackimplementation{
    public static void main(String[] args) {
        Stack st=new Stack();
        st.push(10);
        st.push(20);
        st.push(30);
        st.pop();
        st.peek();
    }
}
class collect {
    public static void main(String[] args) {
        Stack <Integer> s = new Stack<>();
        s.push(10);
        s.push(20);
        s.push(30);
        s.push(40);
        while(!s.isEmpty()){
            System.out.println(s.peek());
            s.pop();
        }
    }
}
